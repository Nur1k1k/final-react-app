{"ast":null,"code":"// Начальное состояние корзины (пустой массив).\nconst cart = [];\n\n// Редуктор handleCart, отвечающий за обработку состояния корзины.\nconst handleCart = (state = cart, action) => {\n  const product = action.payload;\n\n  // Используем оператор switch для обработки различных типов действий (action.type).\n  switch (action.type) {\n    case \"ADDITEM\":\n      // Проверяем, существует ли товар уже в корзине.\n      const exist = state.find(x => x.id === product.id);\n      if (exist) {\n        // Если товар уже существует, увеличиваем количество (qty).\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        // Если товара еще нет в корзине, добавляем его с начальным количеством 1.\n        return [...state, {\n          ...product,\n          qty: 1\n        }];\n      }\n    case \"DELITEM\":\n      // Проверяем, существует ли товар для удаления в корзине.\n      const exist1 = state.find(x => x.id === product.id);\n      if (exist1.qty === 1) {\n        // Если количество товара равно 1, удаляем его из корзины.\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        // Если количество товара больше 1, уменьшаем количество (qty).\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n    default:\n      // Если действие не соответствует ни одному case, возвращаем текущее состояние.\n      return state;\n  }\n};\n\n// Экспортируем редуктор handleCart для использования в корневых редукторах.\nexport default handleCart;","map":{"version":3,"names":["cart","handleCart","state","action","product","payload","type","exist","find","x","id","map","qty","exist1","filter"],"sources":["C:/Users/dauye/Desktop/final-project/react-app-buysell/src/redux/reducers/handleCart.js"],"sourcesContent":["// Начальное состояние корзины (пустой массив).\r\nconst cart = [];\r\n\r\n// Редуктор handleCart, отвечающий за обработку состояния корзины.\r\nconst handleCart = (state = cart, action) => {\r\n  const product = action.payload;\r\n  \r\n  // Используем оператор switch для обработки различных типов действий (action.type).\r\n  switch (action.type) {\r\n    case \"ADDITEM\":\r\n      // Проверяем, существует ли товар уже в корзине.\r\n      const exist = state.find((x) => x.id === product.id);\r\n\r\n      if (exist) {\r\n        // Если товар уже существует, увеличиваем количество (qty).\r\n        return state.map((x) =>\r\n          x.id === product.id ? { ...x, qty: x.qty + 1 } : x\r\n        );\r\n      } else {\r\n        // Если товара еще нет в корзине, добавляем его с начальным количеством 1.\r\n        return [...state, { ...product, qty: 1 }];\r\n      }\r\n      \r\n    case \"DELITEM\":\r\n      // Проверяем, существует ли товар для удаления в корзине.\r\n      const exist1 = state.find((x) => x.id === product.id);\r\n      \r\n      if (exist1.qty === 1) {\r\n        // Если количество товара равно 1, удаляем его из корзины.\r\n        return state.filter((x) => x.id !== exist1.id);\r\n      } else {\r\n        // Если количество товара больше 1, уменьшаем количество (qty).\r\n        return state.map((x) =>\r\n          x.id === product.id ? { ...x, qty: x.qty - 1 } : x\r\n        );\r\n      }\r\n      \r\n    default:\r\n      // Если действие не соответствует ни одному case, возвращаем текущее состояние.\r\n      return state;\r\n  }\r\n};\r\n\r\n// Экспортируем редуктор handleCart для использования в корневых редукторах.\r\nexport default handleCart;\r\n"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAG,EAAE;;AAEf;AACA,MAAMC,UAAU,GAAGA,CAACC,KAAK,GAAGF,IAAI,EAAEG,MAAM,KAAK;EAC3C,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;;EAE9B;EACA,QAAQF,MAAM,CAACG,IAAI;IACjB,KAAK,SAAS;MACZ;MACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MAEpD,IAAIH,KAAK,EAAE;QACT;QACA,OAAOL,KAAK,CAACS,GAAG,CAAEF,CAAC,IACjBA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CACnD,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO,CAAC,GAAGP,KAAK,EAAE;UAAE,GAAGE,OAAO;UAAEQ,GAAG,EAAE;QAAE,CAAC,CAAC;MAC3C;IAEF,KAAK,SAAS;MACZ;MACA,MAAMC,MAAM,GAAGX,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MAErD,IAAIG,MAAM,CAACD,GAAG,KAAK,CAAC,EAAE;QACpB;QACA,OAAOV,KAAK,CAACY,MAAM,CAAEL,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKG,MAAM,CAACH,EAAE,CAAC;MAChD,CAAC,MAAM;QACL;QACA,OAAOR,KAAK,CAACS,GAAG,CAAEF,CAAC,IACjBA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CACnD,CAAC;MACH;IAEF;MACE;MACA,OAAOP,KAAK;EAChB;AACF,CAAC;;AAED;AACA,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}